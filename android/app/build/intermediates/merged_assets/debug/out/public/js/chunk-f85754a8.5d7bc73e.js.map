{"version":3,"sources":["webpack:///./src/views/MoviesTab.vue","webpack:///./src/modals/MovieDetails.vue","webpack:///./src/modals/MovieDetails.vue?5f1e","webpack:///./src/modals/MovieDetails.vue?2146","webpack:///./src/components/MovieItem.vue","webpack:///./src/components/MovieItem.vue?3f6d","webpack:///./src/components/MovieItem.vue?5af2","webpack:///./src/views/MoviesTab.vue?0d3d","webpack:///./src/views/MoviesTab.vue?8ae3","webpack:///./src/components/MovieItem.vue?3b07"],"names":["slot","openPicker","fullscreen","collapse","size","computedFilteredMovies","movie","key","Id","isButton","openModal","movies","expand","filterGenre","color","closeModal","class","src","LargePosterUrl","alt","Genres","toUpperCase","Name","Synopsis","name","props","components","IonContent","IonHeader","IonTitle","IonToolbar","IonImg","IonCardHeader","IonCardSubtitle","IonCardTitle","IonCardContent","IonButton","IonButtons","IonCard","methods","async","modal","getTop","dismiss","render","button","Object","Boolean","IonItem","IonLabel","__scopeId","IonPage","IonList","MovieItem","store","getters","moviesList","informationCircle","computed","vm","this","filter","availableGenres","opts","includes","push","text","value","options","selectedMovie","create","component","MovieDetails","swipeToClose","showBackdrop","backdropDismiss","componentProps","present","picker","columns","computedGenres","buttons","role","handler","genres","onDidDismiss","then","forEach","col","el","selected","duration","transform"],"mappings":"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","file":"js/chunk-f85754a8.5d7bc73e.js","sourcesContent":["<template>\r\n  <ion-page>\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"end\">\r\n          <ion-button @click=\"openPicker\">Filter</ion-button>\r\n        </ion-buttons>\r\n        <ion-title>Movies</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n    <ion-content :fullscreen=\"true\">\r\n      <ion-header collapse=\"condense\">\r\n        <ion-toolbar>\r\n          <ion-title size=\"large\">Movies</ion-title>\r\n        </ion-toolbar>\r\n      </ion-header>\r\n      <ion-list>\r\n        <movie-item \r\n          v-for=\"movie in computedFilteredMovies\" \r\n          v-bind:key=\"movie.Id\" \r\n          :movie=\"movie\"\r\n          :isButton=\"true\" \r\n          @click=\"openModal(movie)\"/>\r\n      </ion-list>\r\n      <ion-button v-if=\"computedFilteredMovies != movies\" expand=\"block\" @click=\"filterGenre=''\" color=\"danger\">Clear Filter</ion-button>\r\n    </ion-content>\r\n  </ion-page>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonList,\r\n   modalController, pickerController, IonButtons, \r\n   IonButton  } from '@ionic/vue';\r\nimport  MovieDetailsModal  from '../modals/MovieDetails.vue';\r\nimport { informationCircle } from 'ionicons/icons';\r\nimport { defineComponent, computed } from 'vue';\r\nimport MovieItem from '../components/MovieItem.vue';\r\nimport { MovieInterface } from '../store/modules/state'\r\nimport { useStore } from '../store';\r\n\r\ninterface pickerOption {\r\n  text: string;\r\n  value: string;\r\n}\r\n\r\ninterface pickerColumn {\r\n  name: string;\r\n  options: pickerOption[];\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'MoviesTab',\r\n  components: { \r\n    IonHeader, \r\n    IonToolbar, \r\n    IonTitle, \r\n    IonContent, \r\n    IonPage, \r\n    IonList,\r\n    IonButtons, \r\n    IonButton,\r\n    MovieItem,\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const movies = computed(() => store.getters.moviesList)\r\n    return {\r\n      informationCircle,\r\n      movies\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n    filterGenre: '' as string,\r\n    }\r\n  },\r\n  computed: {\r\n    computedFilteredMovies(): MovieInterface[] {\r\n      const vm = this;\r\n      if (vm.filterGenre === '') {\r\n        return vm.movies;\r\n      } else {\r\n        return vm.movies.filter(function (movie: MovieInterface) {\r\n          return movie.Genres == vm.filterGenre;\r\n        });\r\n      }\r\n    },\r\n    computedGenres(): pickerColumn[] {\r\n      const vm = this;\r\n\r\n      // Array with available genres\r\n      var availableGenres: string[] = []; \r\n\r\n      // Options for pickerController Column structure\r\n      var opts: pickerOption[] = []; \r\n\r\n      /*\r\n      * Iteration on the list of movies to get the available genres. \r\n      * This allows the user to have the full list of genres for the filtering feature.\r\n      */\r\n      for (let movie of vm.movies) {\r\n        if (!availableGenres.includes(movie.Genres) && movie.Genres) {\r\n          availableGenres.push(movie.Genres);\r\n          opts.push({text: movie.Genres.toUpperCase(), value: movie.Genres});\r\n        }\r\n      }\r\n      return [{name: \"genres\", options: opts}];\r\n    }\r\n  },\r\n  methods: {\r\n    async openModal (selectedMovie: MovieInterface): Promise<void> {\r\n      const modal = await modalController\r\n        .create({\r\n          component: MovieDetailsModal,\r\n          swipeToClose: true,\r\n          showBackdrop: true,\r\n          backdropDismiss: true,\r\n          componentProps: {\r\n            movie: selectedMovie\r\n          },\r\n        })\r\n      return modal.present();\r\n    },\r\n    async openPicker (): Promise<void> {\r\n      const vm = this;\r\n      const picker = await pickerController.create({\r\n        columns: vm.computedGenres,\r\n        buttons: [\r\n          {\r\n            text: 'Cancel',\r\n            role: 'cancel'\r\n          },\r\n          {\r\n            text: 'Confirm',\r\n            handler: (value) => {\r\n              //console.log(`Got Value ${value}`);\r\n              //console.log(value.genres.value);\r\n              vm.filterGenre = value.genres.value;\r\n            }\r\n          }\r\n        ]\r\n      });\r\n      await picker.present();\r\n\r\n      /**\r\n       * The following code solves the problem of the picker options overlapping\r\n       */\r\n      picker.onDidDismiss().then(async () => {\r\n        picker.columns.forEach(col => {\r\n          col.options.forEach(el => {\r\n            delete el.selected;\r\n            delete el.duration;\r\n            delete el.transform;\r\n          });\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n\r\n</style>","<template>\r\n  <ion-header>\r\n    <ion-toolbar>\r\n      <ion-buttons slot=\"end\">\r\n        <ion-button @click=\"closeModal\">\r\n          Close\r\n        </ion-button>\r\n      </ion-buttons>\r\n      <ion-title>Movie Details</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n  <ion-content class=\"ion-padding\">\r\n    <ion-card>\r\n        <ion-img :src=\"movie.LargePosterUrl\" alt=\"No Available Image\" />\r\n        <ion-card-header>\r\n            <ion-card-subtitle>{{movie.Genres.toUpperCase()}}</ion-card-subtitle>\r\n            <ion-card-title>{{ movie.Name }}</ion-card-title>\r\n        </ion-card-header>\r\n        <ion-card-content>\r\n            {{movie.Synopsis}}\r\n        </ion-card-content>\r\n    </ion-card>\r\n  </ion-content>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { IonContent, IonHeader, IonTitle, IonToolbar, IonImg, IonCardHeader,\r\n   IonCardSubtitle, IonCardTitle, IonCardContent, modalController, IonButton, IonButtons, IonCard } from '@ionic/vue';\r\nimport { defineComponent  } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'MovieDetailsModal',\r\n  props: {\r\n    movie: {}\r\n  },\r\n  components: { \r\n      IonContent, \r\n      IonHeader, \r\n      IonTitle, \r\n      IonToolbar,\r\n      IonImg, \r\n      IonCardHeader, \r\n      IonCardSubtitle, \r\n      IonCardTitle, \r\n      IonCardContent, \r\n      IonButton, \r\n      IonButtons, \r\n      IonCard\r\n    },\r\n    methods: {\r\n      closeModal: async function () {\r\n        const modal = await modalController.getTop();\r\n        if (modal) modal.dismiss();\r\n      }\r\n    }\r\n});\r\n\r\n</script>","\r\nimport { IonContent, IonHeader, IonTitle, IonToolbar, IonImg, IonCardHeader,\r\n   IonCardSubtitle, IonCardTitle, IonCardContent, modalController, IonButton, IonButtons, IonCard } from '@ionic/vue';\r\nimport { defineComponent  } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'MovieDetailsModal',\r\n  props: {\r\n    movie: {}\r\n  },\r\n  components: { \r\n      IonContent, \r\n      IonHeader, \r\n      IonTitle, \r\n      IonToolbar,\r\n      IonImg, \r\n      IonCardHeader, \r\n      IonCardSubtitle, \r\n      IonCardTitle, \r\n      IonCardContent, \r\n      IonButton, \r\n      IonButtons, \r\n      IonCard\r\n    },\r\n    methods: {\r\n      closeModal: async function () {\r\n        const modal = await modalController.getTop();\r\n        if (modal) modal.dismiss();\r\n      }\r\n    }\r\n});\r\n\r\n","import { render } from \"./MovieDetails.vue?vue&type=template&id=6d20971f\"\nimport script from \"./MovieDetails.vue?vue&type=script&lang=ts\"\nexport * from \"./MovieDetails.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <ion-item :button=\"isButton\">\r\n        <ion-img :src=\"movie.LargePosterUrl\" class=\"item-avatar\" ></ion-img>\r\n        <ion-label>\r\n            <h2>{{movie.Name}}</h2>\r\n            <p class=\"movie-genre\">{{movie.Genres.toUpperCase()}}</p>\r\n        </ion-label>\r\n    </ion-item>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { IonItem, IonImg, IonLabel} from '@ionic/vue';\r\nimport { defineComponent  } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'MovieItem',\r\n  props: {\r\n    movie: Object,\r\n    isButton: Boolean\r\n  },\r\n  components: { \r\n      IonItem, \r\n      IonImg, \r\n      IonLabel\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\nion-item {\r\n  --background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%);\r\n  --border-radius: 20px;\r\n  margin-bottom: 5%;\r\n  margin-top: 5%;\r\n  margin-left: 5%;\r\n  margin-right: 5%;\r\n}\r\n\r\nion-label {\r\n  padding-left:10%;\r\n}\r\n\r\nion-label h2 {\r\n  white-space: normal;\r\n  font-weight: 800;\r\n}\r\n\r\nion-label p {\r\n  white-space: normal;\r\n}\r\n\r\n.item-avatar {\r\n  width:40%; \r\n  margin-top:5%; \r\n  margin-bottom:5%;\r\n}\r\n\r\n</style>","\r\nimport { IonItem, IonImg, IonLabel} from '@ionic/vue';\r\nimport { defineComponent  } from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'MovieItem',\r\n  props: {\r\n    movie: Object,\r\n    isButton: Boolean\r\n  },\r\n  components: { \r\n      IonItem, \r\n      IonImg, \r\n      IonLabel\r\n    }\r\n});\r\n\r\n","import { render } from \"./MovieItem.vue?vue&type=template&id=e4cad4e0&scoped=true\"\nimport script from \"./MovieItem.vue?vue&type=script&lang=ts\"\nexport * from \"./MovieItem.vue?vue&type=script&lang=ts\"\n\nimport \"./MovieItem.vue?vue&type=style&index=0&id=e4cad4e0&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-e4cad4e0\"\n\nexport default script","\r\n\r\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonList,\r\n   modalController, pickerController, IonButtons, \r\n   IonButton  } from '@ionic/vue';\r\nimport  MovieDetailsModal  from '../modals/MovieDetails.vue';\r\nimport { informationCircle } from 'ionicons/icons';\r\nimport { defineComponent, computed } from 'vue';\r\nimport MovieItem from '../components/MovieItem.vue';\r\nimport { MovieInterface } from '../store/modules/state'\r\nimport { useStore } from '../store';\r\n\r\ninterface pickerOption {\r\n  text: string;\r\n  value: string;\r\n}\r\n\r\ninterface pickerColumn {\r\n  name: string;\r\n  options: pickerOption[];\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'MoviesTab',\r\n  components: { \r\n    IonHeader, \r\n    IonToolbar, \r\n    IonTitle, \r\n    IonContent, \r\n    IonPage, \r\n    IonList,\r\n    IonButtons, \r\n    IonButton,\r\n    MovieItem,\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const movies = computed(() => store.getters.moviesList)\r\n    return {\r\n      informationCircle,\r\n      movies\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n    filterGenre: '' as string,\r\n    }\r\n  },\r\n  computed: {\r\n    computedFilteredMovies(): MovieInterface[] {\r\n      const vm = this;\r\n      if (vm.filterGenre === '') {\r\n        return vm.movies;\r\n      } else {\r\n        return vm.movies.filter(function (movie: MovieInterface) {\r\n          return movie.Genres == vm.filterGenre;\r\n        });\r\n      }\r\n    },\r\n    computedGenres(): pickerColumn[] {\r\n      const vm = this;\r\n\r\n      // Array with available genres\r\n      var availableGenres: string[] = []; \r\n\r\n      // Options for pickerController Column structure\r\n      var opts: pickerOption[] = []; \r\n\r\n      /*\r\n      * Iteration on the list of movies to get the available genres. \r\n      * This allows the user to have the full list of genres for the filtering feature.\r\n      */\r\n      for (let movie of vm.movies) {\r\n        if (!availableGenres.includes(movie.Genres) && movie.Genres) {\r\n          availableGenres.push(movie.Genres);\r\n          opts.push({text: movie.Genres.toUpperCase(), value: movie.Genres});\r\n        }\r\n      }\r\n      return [{name: \"genres\", options: opts}];\r\n    }\r\n  },\r\n  methods: {\r\n    async openModal (selectedMovie: MovieInterface): Promise<void> {\r\n      const modal = await modalController\r\n        .create({\r\n          component: MovieDetailsModal,\r\n          swipeToClose: true,\r\n          showBackdrop: true,\r\n          backdropDismiss: true,\r\n          componentProps: {\r\n            movie: selectedMovie\r\n          },\r\n        })\r\n      return modal.present();\r\n    },\r\n    async openPicker (): Promise<void> {\r\n      const vm = this;\r\n      const picker = await pickerController.create({\r\n        columns: vm.computedGenres,\r\n        buttons: [\r\n          {\r\n            text: 'Cancel',\r\n            role: 'cancel'\r\n          },\r\n          {\r\n            text: 'Confirm',\r\n            handler: (value) => {\r\n              //console.log(`Got Value ${value}`);\r\n              //console.log(value.genres.value);\r\n              vm.filterGenre = value.genres.value;\r\n            }\r\n          }\r\n        ]\r\n      });\r\n      await picker.present();\r\n\r\n      /**\r\n       * The following code solves the problem of the picker options overlapping\r\n       */\r\n      picker.onDidDismiss().then(async () => {\r\n        picker.columns.forEach(col => {\r\n          col.options.forEach(el => {\r\n            delete el.selected;\r\n            delete el.duration;\r\n            delete el.transform;\r\n          });\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n})\r\n","import { render } from \"./MoviesTab.vue?vue&type=template&id=5b20d32e&scoped=true\"\nimport script from \"./MoviesTab.vue?vue&type=script&lang=ts\"\nexport * from \"./MoviesTab.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-5b20d32e\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MovieItem.vue?vue&type=style&index=0&id=e4cad4e0&scoped=true&lang=css\""],"sourceRoot":""}